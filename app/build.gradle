apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'jacoco-android'
//获取时间
def getDate(){
    def date =new Date()
    return date.format('yyyy-MM-dd-HH-mm')
}
//版本号
def verCode =1

//版本名
def verName="1.0.0"

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.ruanhao.wifichat"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode verCode
        versionName verName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        //发布
        release {
            //是否混淆
            minifyEnabled false
            //忽略无用资源
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        //调试
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            testCoverageEnabled true
        }
    }
    //多版本差异化打包
    productFlavors {

    }
    lintOptions {
        abortOnError false
    }
    signingConfigs{
        signingConfig{
            //由于本地打包使用的是本机上的KeyStore
            //而Jenkins打包用的是服务器上的KeyStore
            //两个路径不一样
            if ("true".equals(IS_JENKINS)){
                storeFile file ("服务器上KeyStore的路径")
            }else{
                storeFile file("E:\\Android\\android.keystore")
            }
            keyAlias "android.keystore"
            keyPassword "rh123456"
            storePassword "rh123456"
        }
    }
    def BUILD_PATH="myapk"
    applicationVariants.all{ variant->
            variant.outputs.all {
                    def newName;
                    def timeNow
                    def outDirectory
                    //是否为jenkins打包，输出路径不同
                    if ("true".equals(IS_JENKINS)){
                        //Jenkins打包输出到服务器路径
                        timeNow =BUILD_TIME
                        //BUILD_PATH为服务器输出路径
                        outDirectory = BUILD_PATH
                        newName = "WiFi-Chat"+APP_VERSION+"-"+".apk"
                    }else {
                        //本机打包输出路径
                        timeNow = getDate()
                        outDirectory =output.outputFile.getParent()
                        if ("debug".equals(variant.buildType.name)){
                            newName = "WiFi-CHat-v${APP_VERSION}-debug.apk"
                        }else {
                            newName = 'WiFi-CHat' + APP_VERSION + variant.buildType.name + '.apk'
                        }

                    }
                outputFileName = new File(outDirectory+"/" + timeNow , newName)
            }

    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:25.4.0'
    implementation 'junit:junit:4.12'
    implementation 'com.android.support.test:runner:1.0.1'
    implementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.litepal.android:core:1.6.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.1.6'
    implementation 'com.orhanobut:logger:2.1.1'
    implementation 'cn.bluemobi.dylan:photoview:1.4'
    implementation 'com.zhihu.android:matisse:0.4.3'
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'

}

repositories {
    google()
}